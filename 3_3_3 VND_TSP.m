% VND 变邻域下降算法，Variable neighborhood Descend
% 求解12个城市的TSP
clc;clear;close;
iterMax=5;  % 最大迭代次数
iterx=0;
distmat=[
    0 350 290 670 600 500 660 440 720 410 480 970;
    350 0 490 580 430 530 620 410 660 350 540 810;
    290 490 0 680 530 570 640 140 800 750 510 790;
    670 580 680 0 590 640 610 510 660 560 610 810;
    600 430 530 590 0 590 640 540 690 540 640 790;
    500 530 570 640 590 0 660 560 620 510 610 760;
    660 620 640 610 640 660 0 560 620 610 660 760;
    440 410 140 510 540 560 560 0 640 490 590 740;
    720 660 800 660 690 620 620 640 0 610 660 710;
    410 350 750 560 540 510 610 490 610 0 510 660;
    480 540 510 610 640 610 660 590 660 510 0 610;
    970 810 790 810 790 760 760 740 710 660 610 0
];% 12个城市之间的额距离
distmat=[
    0 350 290 670 600 500 660 440 720 410 480 970;
    350 0 340 360 280 375 555 490 785 760 700 1100;
    290 340 0 580 410 630 795 680 1030 695 780 1300;
    670 360 580 0 260 380 610 805 870 1100 1000 1100;
    600 280 410 260 0 610 780 735 1030 1000 960 1300;
    500 375 630 380 610 0 160 645 500 950 815 950;
    660 555 795 610 780 160 0 495 345 820 680 830;
    440 490 680 805 735 645 495 0 350 435 300 625;
    720 785 1030 870 1030 500 345 350 0 475 320 485;
    410 760 695 1100 1000 950 820 435 475 0 265 745;
    480 700 780 1000 960 815 680 300 320 265 0 585;
    970 1100 1300 1100 1300 950 830 625 485 745 585 0
]; % 12个城市之间的额距离----书
length=size(distmat,1);
currentSolution=randperm(length);       % 随机生成一个初始解---初始路径
shorterDistance=CalDist(distmat,currentSolution);% 计算初始解的距离
while iterx<iterMax
    currentSolution=randperm(length);% 随机生成一个邻域
    [currentDistance,currentSolution]=VND(currentSolution,distmat);% 计算VND
    if currentDistance<shorterDistance
        shorterDistance=currentDistance;        % 始终保存最佳路径长度
        bestSolution=currentSolution;          % 保存最佳路径
        iterx=0;                               % 迭代次数清零
    else
        iterx=iterx+1;                         % 迭代次数加1
    end
end
shorterDistance         % 输出最短结果
bestSolution            % 输出最佳结果---路径序列

